/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { Count } from "./Count";
import { Sum } from "./Sum";
import { Average } from "./Average";
import { Min } from "./Min";
import { Max } from "./Max";
import { Percentile } from "./Percentile";
import { Median } from "./Median";
import { DistinctCount } from "./DistinctCount";

export const Metric: core.serialization.Schema<serializers.Metric.Raw, MavenAGI.Metric> = core.serialization
    .union("type", {
        count: Count,
        sum: Sum,
        average: Average,
        min: Min,
        max: Max,
        percentile: Percentile,
        median: Median,
        distinctCount: DistinctCount,
    })
    .transform<MavenAGI.Metric>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Metric {
    type Raw =
        | Metric.Count
        | Metric.Sum
        | Metric.Average
        | Metric.Min
        | Metric.Max
        | Metric.Percentile
        | Metric.Median
        | Metric.DistinctCount;

    interface Count extends Count.Raw {
        type: "count";
    }

    interface Sum extends Sum.Raw {
        type: "sum";
    }

    interface Average extends Average.Raw {
        type: "average";
    }

    interface Min extends Min.Raw {
        type: "min";
    }

    interface Max extends Max.Raw {
        type: "max";
    }

    interface Percentile extends Percentile.Raw {
        type: "percentile";
    }

    interface Median extends Median.Raw {
        type: "median";
    }

    interface DistinctCount extends DistinctCount.Raw {
        type: "distinctCount";
    }
}
