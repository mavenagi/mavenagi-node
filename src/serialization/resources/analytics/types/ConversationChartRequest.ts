/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { PieChartRequest } from "./PieChartRequest";
import { DateHistogramRequest } from "./DateHistogramRequest";
import { BarChartRequest } from "./BarChartRequest";

export const ConversationChartRequest: core.serialization.Schema<
    serializers.ConversationChartRequest.Raw,
    MavenAGI.ConversationChartRequest
> = core.serialization
    .union("type", {
        pieChart: PieChartRequest,
        dateHistogram: DateHistogramRequest,
        barChart: BarChartRequest,
    })
    .transform<MavenAGI.ConversationChartRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ConversationChartRequest {
    type Raw =
        | ConversationChartRequest.PieChart
        | ConversationChartRequest.DateHistogram
        | ConversationChartRequest.BarChart;

    interface PieChart extends PieChartRequest.Raw {
        type: "pieChart";
    }

    interface DateHistogram extends DateHistogramRequest.Raw {
        type: "dateHistogram";
    }

    interface BarChart extends BarChartRequest.Raw {
        type: "barChart";
    }
}
