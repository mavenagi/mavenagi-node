/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";

export const CellData: core.serialization.Schema<serializers.CellData.Raw, MavenAGI.CellData> = core.serialization
    .union("type", {
        double: core.serialization.object({
            value: core.serialization.number(),
        }),
        long: core.serialization.object({
            value: core.serialization.number(),
        }),
        millisecond: core.serialization.object({
            value: core.serialization.number(),
        }),
        string: core.serialization.object({
            value: core.serialization.string(),
        }),
    })
    .transform<MavenAGI.CellData>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace CellData {
    export type Raw = CellData.Double | CellData.Long | CellData.Millisecond | CellData.String;

    export interface Double {
        type: "double";
        value: number;
    }

    export interface Long {
        type: "long";
        value: number;
    }

    export interface Millisecond {
        type: "millisecond";
        value: number;
    }

    export interface String {
        type: "string";
        value: string;
    }
}
