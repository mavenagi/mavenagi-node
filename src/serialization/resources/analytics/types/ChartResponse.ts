/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { PieChartResponse } from "./PieChartResponse";
import { DateHistogramResponse } from "./DateHistogramResponse";
import { BarChartResponse } from "./BarChartResponse";

export const ChartResponse: core.serialization.Schema<serializers.ChartResponse.Raw, MavenAGI.ChartResponse> =
    core.serialization
        .union("type", {
            pieChart: PieChartResponse,
            dateHistogram: DateHistogramResponse,
            barChart: BarChartResponse,
        })
        .transform<MavenAGI.ChartResponse>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace ChartResponse {
    export type Raw = ChartResponse.PieChart | ChartResponse.DateHistogram | ChartResponse.BarChart;

    export interface PieChart extends PieChartResponse.Raw {
        type: "pieChart";
    }

    export interface DateHistogram extends DateHistogramResponse.Raw {
        type: "dateHistogram";
    }

    export interface BarChart extends BarChartResponse.Raw {
        type: "barChart";
    }
}
