/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { AudioSubscribeEvent } from "./AudioSubscribeEvent";
import { ControlEvent } from "./ControlEvent";

export const SubscribeEvent: core.serialization.Schema<serializers.SubscribeEvent.Raw, MavenAGI.SubscribeEvent> =
    core.serialization
        .union("messageType", {
            audio: AudioSubscribeEvent,
            controlSessionStart: ControlEvent,
            controlSessionStop: ControlEvent,
            controlAudioDone: ControlEvent,
        })
        .transform<MavenAGI.SubscribeEvent>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace SubscribeEvent {
    export type Raw =
        | SubscribeEvent.Audio
        | SubscribeEvent.ControlSessionStart
        | SubscribeEvent.ControlSessionStop
        | SubscribeEvent.ControlAudioDone;

    export interface Audio extends AudioSubscribeEvent.Raw {
        messageType: "audio";
    }

    export interface ControlSessionStart extends ControlEvent.Raw {
        messageType: "controlSessionStart";
    }

    export interface ControlSessionStop extends ControlEvent.Raw {
        messageType: "controlSessionStop";
    }

    export interface ControlAudioDone extends ControlEvent.Raw {
        messageType: "controlAudioDone";
    }
}
