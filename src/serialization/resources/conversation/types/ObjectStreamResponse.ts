/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { AskStreamTextEvent } from "./AskStreamTextEvent";
import { AskStreamStartEvent } from "./AskStreamStartEvent";
import { AskStreamEndEvent } from "./AskStreamEndEvent";

export const ObjectStreamResponse: core.serialization.Schema<
    serializers.ObjectStreamResponse.Raw,
    MavenAGI.ObjectStreamResponse
> = core.serialization
    .union("eventType", {
        text: AskStreamTextEvent,
        start: AskStreamStartEvent,
        end: AskStreamEndEvent,
    })
    .transform<MavenAGI.ObjectStreamResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ObjectStreamResponse {
    export type Raw = ObjectStreamResponse.Text | ObjectStreamResponse.Start | ObjectStreamResponse.End;

    export interface Text extends AskStreamTextEvent.Raw {
        eventType: "text";
    }

    export interface Start extends AskStreamStartEvent.Raw {
        eventType: "start";
    }

    export interface End extends AskStreamEndEvent.Raw {
        eventType: "end";
    }
}
