/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { DeliverUserMessageRequest } from "./DeliverUserMessageRequest";
import { DeliverConversationMessageRequest } from "./DeliverConversationMessageRequest";

export const DeliverMessageRequest: core.serialization.Schema<
    serializers.DeliverMessageRequest.Raw,
    MavenAGI.DeliverMessageRequest
> = core.serialization
    .union("type", {
        user: DeliverUserMessageRequest,
        conversation: DeliverConversationMessageRequest,
    })
    .transform<MavenAGI.DeliverMessageRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace DeliverMessageRequest {
    export type Raw = DeliverMessageRequest.User | DeliverMessageRequest.Conversation;

    export interface User extends DeliverUserMessageRequest.Raw {
        type: "user";
    }

    export interface Conversation extends DeliverConversationMessageRequest.Raw {
        type: "conversation";
    }
}
