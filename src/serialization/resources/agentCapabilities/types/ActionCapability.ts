/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { ActionParameter } from "../../commons/types/ActionParameter";
import { AgentCapabilityBase } from "./AgentCapabilityBase";

export const ActionCapability: core.serialization.ObjectSchema<
    serializers.ActionCapability.Raw,
    MavenAGI.ActionCapability
> = core.serialization
    .object({
        userInteractionRequired: core.serialization.boolean(),
        buttonName: core.serialization.string().nullable(),
        userFormParameters: core.serialization.list(ActionParameter),
        precondition: core.serialization.lazy(() => serializers.Precondition).optional(),
        descriptionOverride: core.serialization.string().optional(),
        preconditionExplanation: core.serialization.string().optional(),
        pinned: core.serialization.boolean(),
    })
    .extend(AgentCapabilityBase);

export declare namespace ActionCapability {
    export interface Raw extends AgentCapabilityBase.Raw {
        userInteractionRequired: boolean;
        buttonName: string | null;
        userFormParameters: ActionParameter.Raw[];
        precondition?: serializers.Precondition.Raw | null;
        descriptionOverride?: string | null;
        preconditionExplanation?: string | null;
        pinned: boolean;
    }
}
