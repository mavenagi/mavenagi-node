/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { UserEvent } from "./UserEvent";
import { SystemEvent } from "./SystemEvent";

export const EventResponse: core.serialization.Schema<serializers.EventResponse.Raw, MavenAGI.EventResponse> =
    core.serialization
        .union("eventType", {
            userEvent: UserEvent,
            systemEvent: SystemEvent,
        })
        .transform<MavenAGI.EventResponse>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace EventResponse {
    export type Raw = EventResponse.UserEvent | EventResponse.SystemEvent;

    export interface UserEvent extends UserEvent.Raw {
        eventType: "userEvent";
    }

    export interface SystemEvent extends SystemEvent.Raw {
        eventType: "systemEvent";
    }
}
