// This file was auto-generated by Fern from our API Definition.

import * as serializers from "../../../index";
import * as MavenAGI from "../../../../api/index";
import * as core from "../../../../core";
import { EntityId } from "./EntityId";
import { AttachmentResponse } from "./AttachmentResponse";
import { MessageStatus } from "./MessageStatus";
import { UserMessageResponseState } from "./UserMessageResponseState";
import { UserMessageBase } from "./UserMessageBase";

export const UserMessage: core.serialization.ObjectSchema<serializers.UserMessage.Raw, MavenAGI.UserMessage> =
    core.serialization
        .object({
            conversationMessageId: EntityId,
            language: core.serialization.string().optional(),
            attachments: core.serialization.list(AttachmentResponse),
            agentUserId: core.serialization.string().optional(),
            userDisplayName: core.serialization.string().optional(),
            status: MessageStatus,
            responseState: UserMessageResponseState.optional(),
        })
        .extend(UserMessageBase);

export declare namespace UserMessage {
    export interface Raw extends UserMessageBase.Raw {
        conversationMessageId: EntityId.Raw;
        language?: string | null;
        attachments: AttachmentResponse.Raw[];
        agentUserId?: string | null;
        userDisplayName?: string | null;
        status: MessageStatus.Raw;
        responseState?: UserMessageResponseState.Raw | null;
    }
}
