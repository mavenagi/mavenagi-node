/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { ActionSet } from "./api/resources/actionSet/client/Client";
import { Action } from "./api/resources/action/client/Client";
import { Conversation } from "./api/resources/conversation/client/Client";
import { Knowledge } from "./api/resources/knowledge/client/Client";

export declare namespace MavenAGIClient {
    interface Options {
        environment?: core.Supplier<environments.MavenAGIEnvironment | string>;
        appId?: core.Supplier<string | undefined>;
        appSecret?: core.Supplier<string | undefined>;
        organizationId: core.Supplier<string>;
        agentId: core.Supplier<string>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
        abortSignal?: AbortSignal;
    }
}

export class MavenAGIClient {
    constructor(protected readonly _options: MavenAGIClient.Options) {}

    protected _actionSet: ActionSet | undefined;

    public get actionSet(): ActionSet {
        return (this._actionSet ??= new ActionSet(this._options));
    }

    protected _action: Action | undefined;

    public get action(): Action {
        return (this._action ??= new Action(this._options));
    }

    protected _conversation: Conversation | undefined;

    public get conversation(): Conversation {
        return (this._conversation ??= new Conversation(this._options));
    }

    protected _knowledge: Knowledge | undefined;

    public get knowledge(): Knowledge {
        return (this._knowledge ??= new Knowledge(this._options));
    }
}
