/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import * as MavenAGI from "../../src/api/index";
import { MavenAGIClient } from "../../src/Client";

describe("Inbox", () => {
    test("search", async () => {
        const server = mockServerPool.createServer();
        const client = new MavenAGIClient({
            appId: "test",
            appSecret: "test",
            organizationId: "test",
            agentId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = {};
        const rawResponseBody = {
            content: [
                {
                    type: "duplicateKnowledgeBase",
                    recommendedFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    otherFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    knowledgeBases: [
                        { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                        { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    ],
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    status: "OPEN",
                },
                {
                    type: "duplicateKnowledgeBase",
                    recommendedFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    otherFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    knowledgeBases: [
                        { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                        { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    ],
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    status: "OPEN",
                },
            ],
            number: 1,
            size: 1,
            totalElements: 1000000,
            totalPages: 1,
        };
        server
            .mockEndpoint()
            .post("/v1/inbox/search")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.inbox.search({});
        expect(response).toEqual({
            content: [
                {
                    type: "duplicateKnowledgeBase",
                    recommendedFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    otherFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    knowledgeBases: [
                        {
                            knowledgeBaseId: {
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBaseId: {
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    status: "OPEN",
                },
                {
                    type: "duplicateKnowledgeBase",
                    recommendedFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    otherFixes: [
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBase: {
                                knowledgeBaseId: {
                                    type: "AGENT",
                                    appId: "appId",
                                    referenceId: "referenceId",
                                },
                            },
                            id: {
                                organizationId: "organizationId",
                                agentId: "agentId",
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    knowledgeBases: [
                        {
                            knowledgeBaseId: {
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                        {
                            knowledgeBaseId: {
                                type: "AGENT",
                                appId: "appId",
                                referenceId: "referenceId",
                            },
                        },
                    ],
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    status: "OPEN",
                },
            ],
            number: 1,
            size: 1,
            totalElements: 1000000,
            totalPages: 1,
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MavenAGIClient({
            appId: "test",
            appSecret: "test",
            organizationId: "test",
            agentId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            type: "duplicateKnowledgeBase",
            recommendedFixes: [
                {
                    knowledgeBase: { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
                {
                    knowledgeBase: { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
            ],
            otherFixes: [
                {
                    knowledgeBase: { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
                {
                    knowledgeBase: { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
            ],
            knowledgeBases: [
                { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
                { knowledgeBaseId: { type: "AGENT", appId: "appId", referenceId: "referenceId" } },
            ],
            id: {
                organizationId: "organizationId",
                agentId: "agentId",
                type: "AGENT",
                appId: "appId",
                referenceId: "referenceId",
            },
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            status: "OPEN",
        };
        server
            .mockEndpoint()
            .get("/v1/inbox/inboxItemId")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.inbox.get("inboxItemId", {
            appId: "appId",
            itemType: "DUPLICATE_DOCUMENT",
        });
        expect(response).toEqual({
            type: "duplicateKnowledgeBase",
            recommendedFixes: [
                {
                    knowledgeBase: {
                        knowledgeBaseId: {
                            type: "AGENT",
                            appId: "appId",
                            referenceId: "referenceId",
                        },
                    },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
                {
                    knowledgeBase: {
                        knowledgeBaseId: {
                            type: "AGENT",
                            appId: "appId",
                            referenceId: "referenceId",
                        },
                    },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
            ],
            otherFixes: [
                {
                    knowledgeBase: {
                        knowledgeBaseId: {
                            type: "AGENT",
                            appId: "appId",
                            referenceId: "referenceId",
                        },
                    },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
                {
                    knowledgeBase: {
                        knowledgeBaseId: {
                            type: "AGENT",
                            appId: "appId",
                            referenceId: "referenceId",
                        },
                    },
                    id: {
                        organizationId: "organizationId",
                        agentId: "agentId",
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
            ],
            knowledgeBases: [
                {
                    knowledgeBaseId: {
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
                {
                    knowledgeBaseId: {
                        type: "AGENT",
                        appId: "appId",
                        referenceId: "referenceId",
                    },
                },
            ],
            id: {
                organizationId: "organizationId",
                agentId: "agentId",
                type: "AGENT",
                appId: "appId",
                referenceId: "referenceId",
            },
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            status: "OPEN",
        });
    });

    test("getFix", async () => {
        const server = mockServerPool.createServer();
        const client = new MavenAGIClient({
            appId: "test",
            appSecret: "test",
            organizationId: "test",
            agentId: "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = {
            type: "addDocument",
            suggestedTextTitle: "suggestedTextTitle",
            suggestedText: "suggestedText",
            id: {
                organizationId: "organizationId",
                agentId: "agentId",
                type: "AGENT",
                appId: "appId",
                referenceId: "referenceId",
            },
        };
        server
            .mockEndpoint()
            .get("/v1/inbox/fix/inboxItemFixId")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.inbox.getFix("inboxItemFixId", {
            appId: "appId",
            fixType: "REMOVE_DOCUMENT",
        });
        expect(response).toEqual({
            type: "addDocument",
            suggestedTextTitle: "suggestedTextTitle",
            suggestedText: "suggestedText",
            id: {
                organizationId: "organizationId",
                agentId: "agentId",
                type: "AGENT",
                appId: "appId",
                referenceId: "referenceId",
            },
        });
    });

    test("applyFix", async () => {
        const server = mockServerPool.createServer();
        const client = new MavenAGIClient({
            appId: "test",
            appSecret: "test",
            organizationId: "test",
            agentId: "test",
            environment: server.baseUrl,
        });
        const rawRequestBody = { appId: "appId", fixType: "REMOVE_DOCUMENT" };

        server
            .mockEndpoint()
            .post("/v1/inbox/fix/inboxItemFixId/apply")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.inbox.applyFix("inboxItemFixId", {
            appId: "appId",
            fixType: "REMOVE_DOCUMENT",
        });
        expect(response).toEqual(undefined);
    });

    test("ignore", async () => {
        const server = mockServerPool.createServer();
        const client = new MavenAGIClient({
            appId: "test",
            appSecret: "test",
            organizationId: "test",
            agentId: "test",
            environment: server.baseUrl,
        });

        server.mockEndpoint().post("/v1/inbox/inboxItemId/ignore").respondWith().statusCode(200).build();

        const response = await client.inbox.ignore("inboxItemId", {
            appId: "appId",
            itemType: "DUPLICATE_DOCUMENT",
        });
        expect(response).toEqual(undefined);
    });
});
